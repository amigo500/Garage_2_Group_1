// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Garage.Data.Migrations
{
    [DbContext(typeof(GarageContext2))]
    partial class GarageContext2ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Garage.Entities.ParkingSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("VehicleRegNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("VehicleRegNr");

                    b.ToTable("ParkingSlot");
                });

            modelBuilder.Entity("Garage.Entities.User", b =>
                {
                    b.Property<long>("SSN")
                        .HasColumnType("bigint");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SSN");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Garage.Entities.Vehicles.Vehicle", b =>
                {
                    b.Property<string>("RegNr")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserSSN")
                        .HasColumnType("bigint");

                    b.Property<int>("VehicleTypeID")
                        .HasColumnType("int");

                    b.Property<int>("WheelCount")
                        .HasColumnType("int");

                    b.HasKey("RegNr");

                    b.HasIndex("UserSSN");

                    b.HasIndex("VehicleTypeID");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("Garage.Entities.Vehicles.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VehicleType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Airplane",
                            Size = 3
                        },
                        new
                        {
                            Id = 2,
                            Name = "Boat",
                            Size = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bus",
                            Size = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Car",
                            Size = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Motorcycle",
                            Size = 1
                        });
                });

            modelBuilder.Entity("Garage.Entities.ParkingSlot", b =>
                {
                    b.HasOne("Garage.Entities.Vehicles.Vehicle", "Vehicle")
                        .WithMany("ParkingSlots")
                        .HasForeignKey("VehicleRegNr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Garage.Entities.Vehicles.Vehicle", b =>
                {
                    b.HasOne("Garage.Entities.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserSSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Garage.Entities.Vehicles.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("Garage.Entities.User", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Garage.Entities.Vehicles.Vehicle", b =>
                {
                    b.Navigation("ParkingSlots");
                });

            modelBuilder.Entity("Garage.Entities.Vehicles.VehicleType", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
