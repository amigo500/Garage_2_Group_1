@using Garage_2_Group_1.Models.VehicleVeiwModels
@model IEnumerable<VehicleIndexViewModel>
@inject IParkingService parkingService
@inject IVehicleTypeSelectListService typeService
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Registered Vehicles</h1>

<a asp-action="Create" class="btn btn-primary">Register Vehicles</a>
<a asp-action="Park" class="btn btn-primary">Park Vehicles</a>

<partial name="IndexRegisteredVehiclesPartial" />

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript" src="~/js/park-component.js"></script>

    <script type="text/javascript">

    let modal;
    let regNr

    $(".park-button").click(function() {
        let parkingSlots = [];

        @foreach (var s in parkingService.EmptyParkingSlots)
        {
            @:parkingSlots.push('@Html.Raw(s)');
        }

        regNr = $(this).attr("regNr");
        let size = $(this).attr("size");
        $(`#p${regNr}`).modal('show');

        modal = document.querySelector(`#p${regNr}`);
        const modalFooter = modal.querySelector(".modal-footer");
        const parkButton = modalFooter.querySelector("#modal-park-btn");

        parkViewComponent.init([size, parkingSlots, regNr, parkButton]);
        parkViewComponent.selectParking();
    });

    $(".checkout-button").click(function() {
        regNr = $(this).attr("regNr");
        $(`#c${regNr}`).modal('show');
    });

    $(document).on('click', '#modal-park-btn', function () {
        parkViewComponent.parkInSelectedSlots().then(_ => {
            const modalBody = modal.querySelector(".modal-body");
            const parkText = modalBody.querySelector("#park-text");
            if (parkViewComponent.getParkingStatus())
            {
                parkText.innerHTML = "Your vehicle has been successfully parked, have a nice day!";
            }
            else
            {
                parkText.innerHTML = "The <b>owner</b> of this vehicle is <b>not 18</b>, vehicle can't be parked";
            }
            
        });
    });

    $('.modal').on('hide.bs.modal', function(e) {
        window.location.reload(true);
    });

    function printReceipt(receipt) {
        let restorePage = document.body.innerHTML;
        document.body.innerHTML = receipt.innerHTML;
        window.print();
        document.body.innerHTML = restorePage;
        location.reload(true);
    }
    </script>
}

  
